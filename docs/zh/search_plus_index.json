{"./":{"url":"./","title":"首页","keywords":"","body":"Appinventor & Thunkable 拓展组件 大家好我是ColinTree，一名小小的高中生。由于热爱钻研各种代码活，我为Appinventor&Thunkable开发了一些拓展组件在此悉数奉上~ ---ColinTree 8/15/2017 如果觉得觉得有所帮助，也可以倒过来支持一下丫~ 微信 支付宝 Paypal 左边的列表是我所建立的拓展组件的列表，其中已经开源的会附带一个星号（*）如果不知道如何导入拓展组件，请点击这里 希望访问原站“Appinventor 拓展组件&教程” 的朋友请点击这里 By ColinTree (email me) 捐赠/donate            Last update: 2018-07-27 "},"HowToInstallExtensions.html":{"url":"HowToInstallExtensions.html","title":"拓展使用方法","keywords":"","body":"拓展使用方法 首先呢，找到下载好的.aix文件下载的文件不是aix的话： 可以尝试双击文件，使用压缩包软件打开，里面通常就有一个aix文件 如果下载的时候使用的是IE 或者 Edge，尝试换一个浏览器如Chrome下载 还不行的话，直接在QQ向我要即可 aix文件需要作为一个整体上传，所以不需要再做任何操作，包括解压aix文件 接下来前往Appinventor（thunkable也是极其相近的操作）打开需要导入拓展的项目找到组件列表底部的Extension类别单击展开列表 点击带下划线的import extenion 在弹出的小窗口中，单击选择文件，在文件管理器中选择文件上传并确认 一切就绪，接下来拓展组件就可以像普通组件一样使用啦 By ColinTree (email me) 捐赠/donate            Last update: 2018-07-27 "},"SUMMARY.html":{"url":"SUMMARY.html","title":"已有拓展：","keywords":"","body":"Summary 首页 拓展使用方法 已有拓展： 自定义列表显示 - ColinTreeListView * 文本输入框提示 - AutoCompleteBox 滚动布局管理器 (v2+) - ScrollArrangementHandler 列表显示框的高级定制 下拉刷新 - SwipeRefresh 密码框文字可见度 - PasswordBoxSwitch 异步图片加载器 - AsyncImageLoader 图片轮播 - ColinTreeSlideShow 9-patch位图显示器 - ColinTreeNinePatch 百度翻译Api - BaiduFanyi 判断首次运行 - ColinTreeFirstRun * 返回手机桌面 - ColinTreeGoHome * 获取手机识别号 - ColinTreeIMEI * 数学拓展 - ColinTreeMath * 数学运算拓展 - ColinTreeMathExtended * 系统对话框 - ColinTreeNotifier * 获取系统语言 - ColinTreeSysLang * By ColinTree (email me) 捐赠/donate            Last update: 2018-07-27 "},"extensions/ColinTreeListView.html":{"url":"extensions/ColinTreeListView.html","title":"自定义列表显示 - ColinTreeListView *","keywords":"","body":"自定义列表显示 - ColinTreeListView * 更高级的“列表显示框”，通过拓展组件动态实现！ 2018.7.27更新（V10）： 新增了Get获取所有列表项 感谢@10MINT 的PR 新增了LastLongClickedElement 最后被长按的列表项的编号 感谢@10MINT 的PR 修复了部分平台上部分列表项无法被点击的问题 2018.3.10更新（V9）： 修复了显示Visible属性有关的错误 新增了ClearCache(path)-清除缓存 & ClearAllCache()-清除所有缓存 的块 -- 虽说仍在测试中，但应可以达到效果的 2018.2.25更新（V8）： 修复了ExtraButtonEnabled没作用的问题 新增了ColinTreeListViewElement中直接设置列表项属性的方法 2018.2.25更新（V7） 感谢 @User81 的赞助: 修复了lastClickedElement从0开始算的问题 修复了同路径缓存图被点击时就会触发的奇怪bug 新增了个小图标 新增了一个列表项处理组件 -> 查看文档 2018.2.11更新（V6）： 新增了两个文本高度属性 2018.1.31更新（V5）： 新增了图标文字的相关属性 新增了 最后被点击的列表项的编号(lastClickedElement) 和 最后被点击的图标的列表项编号(lastClickedIcon) 属性 2017.12.30更新（V4）： 适配全平台（ai2.appinventor.mit.edu, thunkable, etc.) 应该彻底没有NoSuchMethod的问题了 2017.12.29更新（V3）： 适配了2017.12.27新版本Appinventor（伴侣版本 2.45）（解决NoSuchMethod的问题） 新增了图片相关的加载策略属性 - 异步加载图片（AsyncImageLoad） & 缓存同名文件（CacheImage） 新增了自动滚动到底部的属性选项 - ScrollBottomAfterAdd 基本使用流程 为该组件预留一个空的 垂直布局 或 垂直滚动布局，将宽高设置好如图： 在添加列表项之前先初始化一下，调用传入一个参数：图中两种方法选其中一个即可 设置列表的内容：其中，列表（list）这个参数是一个二维的列表（大列表套小列表），列表项可以为： 无图标单文本列表项：直接一个文本作为列表项，则为列表显示项的文本 无图标单文本列表项（效果同上一个）：一个列表，只有一个列表项，则这个列表项（文本）即为列表显示项的文本。显示效果与上一种相同 带图标单文本列表项：一个列表有两个项，则依次对应：列表项图标路径 和 列表项文字 带图标双文本列表项：一个列表有三个项，则依次对应：列表项图标路径、列表项主文字 和 列表项副文字 各种列表项可以在一个列表中共存，并按照各自的规则显示 代码样例如图：对应显示效果（列表项图标复合参数已勾选）： 事件 列表项事件： 列表项被点击 *相关属性: 最后一次被点击的列表项（的编号） 列表项被长按 相关属性: 最后一次被长按的列表项（的列表项编号） 列表项被按下 列表项被松开 小图标事件： 图标被点击 相关属性: 最后一次被点击的小图标（的列表项编号） 图标被长按 图标被按下 图标被松开 列表图标事件（列表左边图标）： 图标被点击 *相关属性: 最后一次被点击的图标（的列表项编号） 图标被长按 图标被按下 图标被松开 方法 列表处理： 添加列表项 添加空列表项 清空列表 获取所有列表项的内容(返回列表) 获取列表项的内容(返回列表) 初始化 初始化(使用滚动布局) 移除列表项 设置列表内容 参数解释： element - 列表项内容 elementIndex - 列表项编号，从1开始算 单个列表项控制： 设置单个列表项 设置单个列表项的图标 设置单个列表项的主文本 设置单个列表项的副文本 设置单个列表项的文本 参数解释： element - 列表项内容 elementIndex - 列表项编号，从1开始算 其他操作 清除所有图片缓存 清除单张图片缓存 组件属性 ColinTreeListView提供了可以供实时更改的列表效果其中可供修改的属性有（这些属性的顺序不受代码控制，略微凌乱）： 异步加载图片 缓存同名文件 单个列表项的高度 - ElementHeight 小图标背景颜色 小图标是否启用 - 默认是不勾选的，如果要启用小图标请勾选此项 小图标高度 小图标图像 小图标内边距 小图标形状 - 同按钮的形状属性 小图标文本 - 本拓展将不支持给每个列表项设置不同的小图标文本 :P 小图标字体加粗 小图标字体大小 小图标宽度 列表项图标背景色 列表项图标高度 列表项图标使用复合参数 如果选中这一项，一种新的格式（第5版新增）图片路径||图标文本 将会启用。例如 Photoshop.png||P 代表着一个图标的图片是 Photoshop.png 且上面还写这个 P 列表项图标内边距 - 以确保图标文字能够更优地显示 列表项图标形状 - 同按钮的形状属性 列表项图标字体颜色 列表项图标字体加粗 列表项图标字体大小 列表项图标宽度 - IconWidth 添加新的列表项后，滚动到列表最底部（使用了微小的延时以保证列表已经重新渲染） 副文本的字体颜色 副文本字体加粗 副文本字体大小 副文本高度（-1为自适应，-2为填满） 文本的字体颜色 文本字体加粗 文本字体大小 文本高度（-1为自适应，-2为填满） 列表项被按下时的颜 - 默认为白色，透明度136/255，即53% 列表项分割线的颜色 列表项分割线的线宽 列表项图标右侧的间距 列表项图标左侧的间距 附列表项被按下时的颜色： ColinTreeListViewElement 这是一个用过来处理列表中的任意一个列表项的 注意：在使用任何其他属性之前，请先使用LinkToElement来链接到一个列表项 以下是ColinTreeListView中没有的选项： 跟随列表设置 - 默认是假(False)，如果您希望这个列表项在列表的相关属性改变时不被修改，请设为真(True) 列表项背景色 下载地址 最后更新 2018.7.27 (v10) 下载1(本站) 下载2(Github release) 源码 需要更多的功能？ By ColinTree (email me) 捐赠/donate            Last update: 2018-08-13 "},"extensions/AutoCompleteBox.html":{"url":"extensions/AutoCompleteBox.html","title":"文本输入框提示 - AutoCompleteBox","keywords":"","body":"文本输入框提示 - AutoCompleteBox 自动输入，让你的文本输入框更聪明！ 2018.1.4更新（V2）： 新增事件：下拉选项被点击 - AfterSelect 组件设计属性 使用Appinventor时勾选 (关系到组件样式) - ForAppinventor 事件 下拉选项被点击 方法 获取自动输入列表 设置自动输入列表 样例 下载地址 最后更新 2018.1.4 下载1(本站) By ColinTree (email me) 捐赠/donate            Last update: 2018-07-27 "},"extensions/ScrollArrangementHandlers.html":{"url":"extensions/ScrollArrangementHandlers.html","title":"滚动布局管理器 (v2+) - ScrollArrangementHandler","keywords":"","body":"滚动布局管理器 - ScrollArrangementHandlers (v2+) 这个拓展包内包含了两个拓展，水平滚动布局管理器HorizontalScrollHandler，和垂直滚动管理器VerticalScrollHandler 2017.12.25更新： 修复了VerticalScrollHandler的事件无法触发的问题 修复了ScrollChanged返回错误的数据的问题 修复了ScrollPosition，MaxScrollPosition的单位错乱问题（我弄混了安卓像素单位和ai像素单位），现在相关的事件应该也工作正常了 修复了OverScrollMode修改无效的问题 增加了过度滚动的事件 - Overscroll 圣诞快乐！ 2017.9.29更新： 修复了大部分方法的命名问题（并重命名组件以避免错误） 加了个组件图标 增加了“显示渐变边缘”属性 - FadingEdgeEnabled 增加了“过度滚动动画样式”属性 - OverScrollMode 增加了“显示滚动条”属性 - ScrollBarEnabled 增加了“允许用户操作滚动布局”属性 - UserControl 增加了“最大滚动位置”属性 - MaxScrollPosition 增加了“滚动位置”属性 - ScrollPosition 2017.8.26更新： 增加了布局被松开事件 - TouchUp 水平滚动布局管理器 HorizontalScrollHandler 事件（水平） 向左过度拖动 向右过度拖动 布局滚动到最左端 布局滚动到最右端 布局发生滚动 布局被按下 布局被松开 方法（水平） 向左半页滚动 向右半页滚动 向左整页滚动 向右整页滚动 绑定水平滚动布局 滚动一段距离 滚动到最左 滚动到最右 滚动到指定位置 平滑的滚动一段距离 平滑的滚动到指定位置 参数解释： px - 滚动的距离。向右为正，向左为负 属性（水平） 显示渐变边缘 最大滚动位置 过度滚动动画样式 0 - 总是允许过度滚动 1（默认） - 当布局可以被有效滚动时才允许过度滚动 2 - 禁止过度滚动 （在不同版本的系统中过度滚动动画看起来可能会不太一样 显示滚动条 滚动位置 允许用户操作滚动布局 垂直滚动布局管理器 VerticalScrollHandler 事件（垂直） 向下过度拖动 向上过度拖动 布局滚动到最底端 布局滚动到最顶端 布局发生滚动 布局被按下 布局被松开 方法（垂直） 向上进行半页滚动 向右进行半页滚动 向上进行整页滚动 向下进行整页滚动 绑定垂直滚动布局 滚动到最低端 滚动一段距离 滚动到指定位置 滚动到最顶端 平滑的滚动一段距离 平滑的滚动到指定位置 参数解释： px - 滚动的距离。向下为正，向上为负 属性（垂直） 显示渐变边缘 最大滚动位置 - MaxScrollPosition 过度滚动动画样式 0 - 总是允许过度滚动 1（默认） - 当布局可以被有效滚动时才允许过度滚动 2 - 禁止过度滚动 （在不同版本的系统中过度滚动动画看起来可能会不太一样） 显示滚动条 - ScrollBarEnabled 当前滚动位置 - ScrollPosition 允许用户操作滚动布局 - UserControl 下载地址 最后更新 2017.12.25 (v3) 下载1(本站) By ColinTree (email me) 捐赠/donate            Last update: 2018-07-27 "},"extensions/ListViewCustomize.html":{"url":"extensions/ListViewCustomize.html","title":"列表显示框的高级定制","keywords":"","body":"列表显示框的高级定制 英文原贴 halo大家好我是树树ColinTree 你们还记得我的 自定义列表显示 吗~ 最近我想开始一些比较有意义的事情： 我可以为有需要的人定制他们想要的列表显示框啦！ 允许定制的内容 对于整个拓展组件，你可以定制： 它的属性 拓展组件名字 拓展图标 (按照ai的要求，尺寸必须是16像素x16像素) 对于每个列表元素，你可以定制： 包括布局总计30个组件 用户操作相关事件（被点击Click, 被长按/被慢点击Longclick, 被按压TouchDown 和 被松开TouchUp） 元素的参数（比如显示的文本） 注： 如果真的真的实在太复杂我会选择拒绝的哦~ （或者提高￥￥）（比方说微博首页那种，应该就不是30个组件能搞定的了） 费用 ￥99.8 （如果还要我设计aia，再加￥99.8）（支付宝、微信、QQ转账皆可） 条款 对于这个定制，有且只有你会收到我发出的拓展文件，我与你是唯一持有这个拓展组件的 但也请尊重作者的劳动，尽管我甚至允许反编译的行为（用于学习那种，请不要将反编译的结果商用）。而包含拓展的app也可以进行商店上架 例子 我有个朋友呢他发给我一个aia文件。如图中所示，这个aia文件提供了一个列表元素应该包含的组件结构和参数。 我按照aia制作出相应的拓展组件，并发给他 经测试，拓展组件可以正常运行，并且效果与所期望的相同（如图中模拟器显示的样子） 联系方式 QQ: 502470184 邮箱：502470184@qq.com By ColinTree (email me) 捐赠/donate            Last update: 2018-07-27 "},"extensions/SwipeRefresh.html":{"url":"extensions/SwipeRefresh.html","title":"下拉刷新 - SwipeRefresh","keywords":"","body":"下拉刷新 - SwipeRefresh 下拉，刷新，如此简单。 事件 下拉刷新被触发 方法 取消刷新 将下拉刷新注册到布局（仅限滚动布局） 讲下拉刷新注册到列表 P.S. 对于任何一个下拉刷新组件，在两个注册方法中，只选择一个。一旦注册成功，之后调用的注册方法都会被无视。 Material Design所推荐使用的颜色 属性 背景颜色（下拉显示的圆圈背景的颜色，如果在Appinventor中使用，圆圈周围将不会有立体阴影） 颜色列表（一个包含一个或以上的颜色的列表，在下拉过程中，所有颜色会按顺序显示在下拉显示的转圈动画中） 拖动结束点 - 拖动动画的结束点，下拉达到这个点的下拉操作都视为成功的下拉刷新 拖动放大 - 将此项设为真时，下拉圆圈将用逐渐放大的动画代替平滑的滑出 拖动开始点 - 拖动动画的开始点，拖动开始时圆圈的出现地点 启用 启动嵌套滑动 刷新状态 加大圆圈 下载地址 最后更新 2018.7.28 (v2) 下载1(本站) 下载2(Github release) 源码 样例 样例aia 样例apk By ColinTree (email me) 捐赠/donate            Last update: 2018-10-10 "},"extensions/PasswordBoxSwitch.html":{"url":"extensions/PasswordBoxSwitch.html","title":"密码框文字可见度 - PasswordBoxSwitch","keywords":"","body":"密码框文字可见度 - PasswordBoxSwitch 追随设计潮流，避免两个密码框~ （当今很多注册页面的设计中都会选择只使用一个密码框，并加一个用户可操作的密码可见度开关，减少用户的输入时间成本） 方法 切换至密码框状态 切换至文本框状态 样例 就这么简单： 2017.9.27 21:55左右我更新了拓展文件如果将这之前的旧拓展覆盖成新的，会导致原有代码块变成下图中，上面那个代码块那样。只需手动替换即可 下载地址 最后更新 2017.9.27 下载1(本站) By ColinTree (email me) 捐赠/donate            Last update: 2018-07-27 "},"extensions/AsyncImageLoader.html":{"url":"extensions/AsyncImageLoader.html","title":"异步图片加载器 - AsyncImageLoader","keywords":"","body":"异步图片加载器 - AsyncImageLoader 不再需要等待加载在线图片的卡顿！ 事件 图片加载失败 图片加载成功 方法 给布局设置图片（表格布局没有图片属性所以不支持） 给按钮类型组件设置图片（支持按钮、日期选择框、列表选择框、时间选择框） 给图片组件设置图片（仅支持图像组件） （共计支持9个带有图片选项的组件） 注：这三个方法设置过的图片路径，不能通过组件本身的图片属性“倒过来”获取。比方说，通过 SetImagePicture给一个没有图片的 图像组件 设置了一张网络图片素材之后，再调用该图片组件的“图片”属性，得到的值依旧是空的。 下载地址 最后更新 2017.9.24 下载1(本站) 样例 样例aia 样例apk 实际运行中，同个网络环境下的运行结果差距很大。 使用内置的组件属性直接设置网络图片，整个页面会停止运行，直到所有图片加载完毕（如图中停顿了1.1秒多） 使用拓展的方法从开始调用，到图片陆陆续续加载出来，只经过了0.6秒，还不会影响屏幕的正常显示 By ColinTree (email me) 捐赠/donate            Last update: 2018-07-27 "},"extensions/ColinTreeSlideShow.html":{"url":"extensions/ColinTreeSlideShow.html","title":"图片轮播 - ColinTreeSlideShow","keywords":"","body":"图片轮播 - ColinTreeSlideShow 图片轮播，一“件”搞定！ 2017.9.24更新（v2） 融合了新组件AsyncImageLoader，现在直接加载在线图片也不会卡啦 GitHub Release 2017.9.17发布第一版本 GitHub Release 基本使用流程 为该组件预留一个空的 水平滚动布局，将宽高设置好（目前组件有个问题，在加入图片之后调整这个布局，图片不会跟随改变大小） 如图（背景颜色可以先设置好）： 在添加列表项之前先初始化一下，调用传入一个参数： 给轮播添加图片： 事件 自动轮播开始滚动 自动轮播滚动结束 图片被点击 轮播开始滚动 轮播滚动结束 图片加载完毕 - ImageLoaded (v2新增) 图片加载失败 - ImageLoadFailed (v2新增) 方法 添加（追加）图片 正在播放第一张图片 正在播放最后一张图片 更换图片 前往第一张图 前往最后一张图 前往下一张图 前往上一张图 绑定水平滚动布局（初始化） 参数解释： slideIndex - 轮播图编号，从1开始算 路径(path) - 图片路径 属性 是否开启自动轮播 当前正在播放图片编号 拖动阈值 - 这个值的取值范围是0~1，对应0%~100%，默认值是0.2。当用户拖动轮播并松开，幅度达到阈值（布局宽度阈值）时，轮播组件将自动跳向目标页。（例子：轮播所在的布局宽度为300像素，拖动阈值为0.2。当用户向右拖动了70个像素并松开时，由于70 > 3000.2=60，轮播将自动跳向上一页。） 自动轮播滚动方向向右（勾选此项轮播向右，取消勾选轮播向左） 计时间隔（由于和计时器组件的属性使用同个名称，这里一般会直接有中文翻译。单位是毫秒，即1/1000秒） - 控制轮播自动播放的时间间隔 加载时显示底图 - ImageWhileLoading (v2新增) - 不会显示在代码块属性列表中 下载地址 最后更新 2017.9.24 (v2) 下载1(本站) 样例aia 样例apk - Appinventor 样例apk - Thunkable By ColinTree (email me) 捐赠/donate            Last update: 2018-07-27 "},"extensions/ColinTreeNinePatch.html":{"url":"extensions/ColinTreeNinePatch.html","title":"9-patch位图显示器 - ColinTreeNinePatch","keywords":"","body":"9-patch位图显示器 - ColinTreeNinePatch 部分解释引用自Android 的 9-patch 图片是什么？ - 知乎 在以往，使用Appinventor 或 Thunkable 的过程中，大家经常会遇到一个问题：显示图片时，拉伸导致的变形以及模糊化 在原生安卓中固然会有这种问题，但是谷歌的工程师们怎么可能忍受得了这么严峻的审美挑战呢于是，9-patch诞生了。 简单的说，9 patch 格式可以描述出一张图片哪些地方是可以拉伸的。举个例子，你看到QQ气泡框，无论你发多长的文字，图片中间都被填充，四周图片按原比例显示，这样就解决了不同长度图片可能被拉伸的问题。 现在，通过NinePatchChunk库（作者Anatolii发布于Github） 和 ColinTree的整合，NinePatch技术在Appinventor 和 Thunkable中可以轻松实现。 方法 将已经编译过的9patch设为组件的背景图 将未编译过的9patch设为组件的背景图 参数解释： component - 组件（例如：通常是每一个组件的最下面一个代码块） path - 图片路径，和ai其他部分的路径规则相同。例如：sample.9.png - 上传文件目录下的sample.9.png文件 下载地址 最后更新 2017.8.31 下载1(本站) 样例 样例aia使用广州电教馆服务器打开 样例apk 现有一张已经编译过的素材menu_dropdown_panel_styled.9.png如果使用ColinTreeNinepatch设置到按钮上，可以正常显示为9patch样式而如果使用按钮自带的设置按钮图片，则会放大并模糊化 9-patch制作 这里有一个纯英文的在线9-patch制作器推荐：下载下来的压缩文件中，折中选择\"res\\drawable-xhdpi\\\"文件夹里的图片进行下一步操作即可 然后我把页面大概翻译了一下： 9-patch编译器 为了方便编译，我从Android Studio中提取了必要的文件(aapt.exe)，并写了一个批处理脚本，用于Windows系统上的9-patch文件编译 将压缩文件解压之后，把需要编译的.9.png文件（还带着黑线条的9-patch图片）用鼠标拖动到ColinTree_9patch_compiler.bat上等待编译完成，在OUTPUT文件夹中即可找到编译过后没有黑线的.9.png文件。 已经编译过的文件会把黑线所表达的信息写入图片中，凭肉眼无法识别，但Android运行中可以读取得到。所以在编译过后不要对图片做任何的处理！ 最后更新 2017.8.31 下载1(本站) By ColinTree (email me) 捐赠/donate            Last update: 2018-07-27 "},"extensions/BaiduFanyi.html":{"url":"extensions/BaiduFanyi.html","title":"百度翻译Api - BaiduFanyi","keywords":"","body":"百度翻译Api - BaiduFanyi 直接向百度翻译api获取想要的翻译结果！百度官方api首页 事件 获取翻译期间发生错误 得到翻译 翻译服务器原始响应 方法 解码Json文本 - 功能和Web客户端.解码Json文本 功能相同 翻译文本 - 方法返回的是翻译请求头，可以忽略 属性 apikey appid 下载地址 最后更新 2017.8.5 下载1(本站) 样例aia使用广州电教馆服务器打开（请先登录） 样例apk By ColinTree (email me) 捐赠/donate            Last update: 2018-07-27 "},"extensions/ColinTreeFirstRun.html":{"url":"extensions/ColinTreeFirstRun.html","title":"判断首次运行 - ColinTreeFirstRun *","keywords":"","body":"判断首次运行 - ColinTreeFirstRun * 判断是否第一次运行，只需要一键调用即可完成！ 方法 清除首次运行标记 - 调用这个方法后，下一次的IsFirstRun将会返回真(true) 是否第一次运行 - 第一次调用返回真(true)，并自动记录一个标记，下一次调用将返回假(false) 使用方法 下载地址 最后更新 2017.8.17 下载1(本站) 下载2 源代码 By ColinTree (email me) 捐赠/donate            Last update: 2018-07-27 "},"extensions/ColinTreeGoHome.html":{"url":"extensions/ColinTreeGoHome.html","title":"返回手机桌面 - ColinTreeGoHome *","keywords":"","body":"返回手机桌面 - ColinTreeGoHome * 非常简单但是实用的功能——在不关闭app的情况下返回手机桌面但不保证在后台持续运行（此功能需要整个应用协调，不在本拓展组件功能范围） 方法 返回屏幕主页 - 相当于按一下home键 下载地址 最后更新 2017.8.17 下载1(本站) 下载2 源代码 By ColinTree (email me) 捐赠/donate            Last update: 2018-07-27 "},"extensions/ColinTreeIMEI.html":{"url":"extensions/ColinTreeIMEI.html","title":"获取手机识别号 - ColinTreeIMEI *","keywords":"","body":"获取手机识别号 - ColinTreeIMEI * 方法 获取设备的唯一码 - IMEI（GSM手机）或MEID（CDMA手机） 下载地址 最后更新 2017.8.1 下载1(本站) 下载2 源代码 By ColinTree (email me) 捐赠/donate            Last update: 2018-07-27 "},"extensions/ColinTreeMath.html":{"url":"extensions/ColinTreeMath.html","title":"数学拓展 - ColinTreeMath *","keywords":"","body":"数学拓展 - ColinTreeMath * 所有功能与“数学运算库拓展组件”相同，区别为函数名字进行了压缩 比如GreatestCommonDivisor(最大公约数)缩短为GCD，减小代码占用面积 方法 平均数 - 返回列表中所有数字的平均数 立方根 最大公约数 最小公倍数 Log10 - 返回Log10参数number 返回列表中最大的数字 返回列表中最小的数字 圆周率π 求幂 - 返回number的n次方 判断质数 平方根倒数 - 1/√(number) 升序排序 - 使用冒泡排序 降序排序 - 使用冒泡排序 e - 自然对数e 平方和的根 - √(number12+number22) 下载地址 最后更新 2017.8.17 下载1(本站) 下载2 源代码 By ColinTree (email me) 捐赠/donate            Last update: 2018-07-27 "},"extensions/ColinTreeMathExtended.html":{"url":"extensions/ColinTreeMathExtended.html","title":"数学运算拓展 - ColinTreeMathExtended *","keywords":"","body":"数学运算拓展 - ColinTreeMathExtended * 方法 平均数 - 返回列表中所有数字的平均数 升序排序 - 使用冒泡排序 降序排序 - 使用冒泡排序 立方根 最大公约数 最小公倍数 Log10 - 返回Log10参数number 返回列表中最大的数字 返回列表中最小的数字 圆周率π 求幂 - 返回number的n次方 判断质数 平方根倒数 - 1/√(number) e - 自然对数e 平方和的根 - √(number12+number22) 下载地址 最后更新 2017.8.17 下载1(本站) 下载2 源代码 By ColinTree (email me) 捐赠/donate            Last update: 2018-07-27 "},"extensions/ColinTreeNotifier.html":{"url":"extensions/ColinTreeNotifier.html","title":"系统对话框 - ColinTreeNotifier *","keywords":"","body":"系统对话框 - ColinTreeNotifier * 使用系统的原生小弹窗(Toast) 方法 显示消息 在中心显示消息 下载地址 最后更新 2017.8.17 下载1(本站) 下载2 源代码 By ColinTree (email me) 捐赠/donate            Last update: 2018-07-27 "},"extensions/ColinTreeSysLang.html":{"url":"extensions/ColinTreeSysLang.html","title":"获取系统语言 - ColinTreeSysLang *","keywords":"","body":"获取系统语言 - ColinTreeSysLang * 方法 获取系统当前语言的编码 系统语言是否为英文 系统语言是否为中文 样例 设计了如图的代码 分别在中英文系统下的显示（通知栏日期作为语言参照）： 下载地址 最后更新 2017.8.17 下载1(本站) 下载2 源代码 By ColinTree (email me) 捐赠/donate            Last update: 2018-07-27 "}}